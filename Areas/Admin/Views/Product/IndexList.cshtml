@model IEnumerable<NguyenNhan_2179_tuan3.Models.Product>


@{
    ViewData["Title"] = "Danh Sách Sản Phẩm";
    int numQuantity = 1;
}

<!-- Section chính -->
<section class="py-5 bg-light">
    <div class="container px-4 px-lg-5">
        <!-- Tiêu đề -->
        <div class="text-center mb-5">
            <p class="text-muted fs-5 fst-italic">Khám phá những sản phẩm chất lượng cao và phù hợp với bạn</p>
        </div>

        <!-- Trường hợp không có sản phẩm -->
        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-box-seam-fill text-secondary" style="font-size: 4rem;"></i>
                <h4 class="mt-3 text-muted">Chưa có sản phẩm nào</h4>
                <p class="text-muted">Hãy thêm sản phẩm đầu tiên để bắt đầu bán hàng!</p>
            </div>
        }
        else
        {
            <!-- Giao diện bảng DataTable -->
            <h4 class="mb-3"><i class="bi bi-table"></i> Giao diện Bảng Sản Phẩm</h4>
            <div class="table-responsive shadow-sm rounded bg-white p-3 mb-5">
                <table id="productTable" class="table table-hover align-middle">
                    <thead class="table-dark text-center">
                        <tr>
                            <th>Tên</th>
                            <th>Mô tả</th>
                            <th>Giá</th>
                            <th>Hình ảnh</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@Html.Raw(item.Description)</td>
                                <td>@item.Price.ToString("#,##0") VND</td>
                                <td class="text-center">
                                    <img src="@item.ImageUrl" width="100" height="100"
                                         class="img-thumbnail rounded-circle border border-2"
                                         style="object-fit: cover;" />
                                </td>
                                <td class="text-center">
                                    <!-- Nút Mua ngay cho admin -->
                                    <button class="btn btn-sm btn-success mb-1 rounded-pill"
                                            onclick="addToCart(@item.Id, 1)">
                                        <i class="bi bi-cart-plus-fill"></i> Mua ngay
                                    </button>
                                    <a asp-controller="Home" asp-action="Details" asp-route-id="@item.Id"
                                       class="btn btn-sm btn-outline-primary rounded-pill">
                                        <i class="bi bi-eye-fill"></i> Xem
                                    </a>
                                    <a class="btn btn-outline-warning flex-fill btn-sm"
                                       asp-action="Update" asp-route-id="@item.Id">
                                        <i class="bi bi-pencil me-1"></i>Sửa
                                    </a>
                                    <a class="btn btn-outline-danger flex-fill btn-sm"
                                       asp-action="Delete" asp-route-id="@item.Id"
                                       onclick="return confirm('Bạn có chắc chắn muốn xóa sản phẩm này?')">
                                        <i class="bi bi-trash me-1"></i>Xóa
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</section>

@section Scripts {
    <!-- jQuery (luôn phải đứng trước DataTables) -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <!-- DataTables CSS & JS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <style>
        .toast-notification {
            position: fixed;
            top: 24px;
            right: 24px;
            z-index: 9999;
            opacity: 0;
            transition: opacity 0.3s, top 0.3s;
            min-width: 260px;
        }

            .toast-notification.show {
                opacity: 1;
                top: 48px;
            }

            .toast-notification.success .toast-content {
                background: #198754;
                color: #fff;
            }

            .toast-notification.error .toast-content {
                background: #dc3545;
                color: #fff;
            }

        .toast-content {
            padding: 16px 24px 16px 16px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .toast-message {
            flex: 1;
        }

        .toast-close {
            background: none;
            border: none;
            font-size: 1.3rem;
            color: #fff;
            margin-left: 12px;
            cursor: pointer;
        }
    </style>
    <script>
        $(document).ready(function () {
            $('#productTable').DataTable({
                responsive: true,
                pageLength: 5,
                lengthMenu: [5, 10, 25, 50],
                language: {
                    search: "🔍 Tìm kiếm:",
                    lengthMenu: "Hiển thị _MENU_ sản phẩm",
                    info: "Đang hiển thị _START_ đến _END_ của _TOTAL_ sản phẩm",
                    paginate: {
                        first: "Đầu",
                        last: "Cuối",
                        next: "▶",
                        previous: "◀"
                    },
                    zeroRecords: "Không tìm thấy sản phẩm phù hợp",
                    infoEmpty: "Chưa có dữ liệu",
                }
            });

            // Cập nhật lần đầu khi trang tải
            updateCartCount();
        });

        function addToCart(productId, quantity = 1) {
            fetch("/ShoppingCart/AddToCart", {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                body: `productId=${productId}&quantity=${quantity}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success !== false) {
                    showToast(data.message || "Đã thêm vào giỏ hàng!", 'success');
                    updateCartCount();
                } else {
                    showToast(data.message || "Có lỗi khi thêm vào giỏ hàng!", 'error');
                }
            })
            .catch(err => {
                showToast("Có lỗi xảy ra khi thêm vào giỏ hàng!", 'error');
            });
        }

        function updateCartCount() {
            fetch('/ShoppingCart/GetCartCount')
                .then(res => res.json())
                .then(data => {
                    const count = data.count || 0;
                    const badge = document.getElementById("cartCount");
                    if (badge) {
                        badge.textContent = count;
                        badge.style.display = count > 0 ? 'inline-block' : 'none';
                        badge.classList.remove('cart-animate');
                        void badge.offsetWidth;
                        if (count > 0) badge.classList.add('cart-animate');
                    }
                });
        }

        function showToast(message, type = 'success') {
            const toast = document.createElement("div");
            toast.className = `toast-notification ${type}`;
            toast.innerHTML = `
                <div class="toast-content">
                    <div class="toast-message">${message}</div>
                    <button class="toast-close">&times;</button>
                </div>`;
            document.body.appendChild(toast);
            setTimeout(() => toast.classList.add('show'), 10);
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
            toast.querySelector('.toast-close').addEventListener('click', () => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            });
        }
    </script>
}