@model IEnumerable<NguyenNhan_2179_tuan3.Models.Product>

<link rel="stylesheet" href="~/css/product.css" asp-append-version="true" />

<section class="product-listing py-4">
    <div class="container">

        <!-- FORM BỘ LỌC -->
        <form method="get" class="row mb-4 g-3 align-items-end">
    <!-- Lọc theo danh mục -->
    <div class="col-md-3">
        <label class="form-label">Danh mục</label>
                <select name="categoryId" class="form-select" onchange="this.form.submit()">
                    <option value="">Tất cả</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category.Id" selected="@(ViewBag.SelectedCategoryId == category.Id ? "selected" : null)">
                            @category.Name
                        </option>
                    }
                </select>


    </div>

    <!-- Lọc theo giá -->
    <div class="col-md-2">
        <label class="form-label">Giá từ</label>
        <input type="number" name="minPrice" value="@ViewBag.MinPrice" class="form-control" placeholder="0" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Đến</label>
        <input type="number" name="maxPrice" value="@ViewBag.MaxPrice" class="form-control" placeholder="9999999" />
    </div>

    <!-- Tìm kiếm tên -->
    <div class="col-md-3">
        <label class="form-label">Tìm kiếm</label>
        <input type="text" name="searchQuery" value="@ViewBag.SearchQuery" class="form-control" placeholder="Tên sản phẩm..." />
    </div>

    <!-- Nút lọc -->
    <div class="col-md-2 d-grid">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-funnel-fill"></i> Lọc
        </button>
    </div>
</form>

        <!-- DANH SÁCH SẢN PHẨM -->
        @if (Model.Any())
        {
            <div class="row g-3">
                @foreach (var item in Model)
                {
                    <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex">
                        <div class="product-card card shadow-sm w-100 position-relative d-flex flex-column">

                            <!-- HÌNH ẢNH + CHUYỂN HƯỚNG -->
                            <a asp-action="Details" asp-route-id="@item.Id" class="product-link text-decoration-none text-dark">
                                <div class="product-media position-relative">
                                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                                    {
                                        <img src="@item.ImageUrl" alt="@item.Name" class="product-image card-img-top" loading="lazy" />
                                    }
                                    else
                                    {
                                        <div class="d-flex justify-content-center align-items-center product-image">
                                            <i class="bi bi-image fs-1 text-muted"></i>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(item.Category?.Name))
                                    {
                                        <span class="category-badge badge bg-warning position-absolute top-0 start-0 m-2">@item.Category.Name</span>
                                    }
                                </div>
                            </a>

                            <!-- NỘI DUNG SẢN PHẨM -->
                            <div class="card-body d-flex flex-column flex-grow-1">
                                <a asp-action="Details" asp-route-id="@item.Id" class="product-link text-decoration-none text-dark">
                                    <div class="product-title">@item.Name</div>
                                </a>
                                <p class="card-text small text-muted mb-2">@Html.Raw(item.Description)</p>

                                <div class="mt-auto">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <span class="product-price">@item.Price.ToString("N0") <span class="text-muted">VND</span></span>
                                    </div>
                                    <!-- NÚT TƯƠNG TÁC -->
                                    <div class="d-flex gap-2 button-group">
                                        <button type="button" onclick="addToCart(@item.Id, 1)" class="btn btn-success flex-grow-1">
                                            <i class="bi bi-cart-plus me-1"></i> Thêm vào giỏ
                                        </button>
                                        <form asp-controller="ShoppingCart" asp-action="BuyNow" method="post" style="display:inline;">
                                            <input type="hidden" name="productId" value="@item.Id" />
                                            <input type="hidden" name="quantity" value="1" />
                                            <button type="submit" class="btn btn-primary btn-buy-now flex-grow-1">
                                                Mua ngay
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state text-center py-5">
                <i class="bi bi-box-seam fs-1 text-muted"></i>
                <h3 class="mt-3">Chưa có sản phẩm nào</h3>
                <p class="text-muted">Hãy thêm sản phẩm đầu tiên của bạn!</p>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        const isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();

        function addToCart(productId, quantity = 1) {
            if (!isAuthenticated) {
                window.location.href = "/Identity/Account/Login?returnUrl=" + encodeURIComponent(window.location.pathname);
                return;
            }

            fetch('/ShoppingCart/AddToCart', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `productId=${productId}&quantity=${quantity}`
            })
            .then(async (response) => {
                if (response.redirected) {
                    window.location.href = response.url;
                    return;
                }
                const data = await response.json();
                const toastMsg = data.success ?
                    `✅ ${data.message || 'Đã thêm vào giỏ hàng'}` :
                    `❌ ${data.message || 'Lỗi khi thêm vào giỏ hàng'}`;
                showToast(toastMsg, data.success ? 'success' : 'error');
                updateCartCount();
            })
            .catch(() => showToast("❌ Lỗi kết nối tới server", 'error'));
        }

        function updateCartCount() {
            fetch('/ShoppingCart/GetCartCount')
                .then(res => res.json())
                .then(data => {
                    const count = data.count || 0;
                    const badge = document.getElementById("cartCount");
                    if (badge) {
                        badge.textContent = count;
                        badge.style.display = count > 0 ? 'inline-block' : 'none';
                        badge.classList.remove('cart-animate');
                        void badge.offsetWidth;
                        if (count > 0) badge.classList.add('cart-animate');
                    }
                });
        }

        function showToast(message, type = 'success') {
            const toast = document.createElement("div");
            toast.className = `toast-notification ${type}`;
            toast.innerHTML = `
                <div class="toast-content">
                    <div class="toast-message">${message}</div>
                    <button class="toast-close">&times;</button>
                </div>`;
            document.body.appendChild(toast);
            setTimeout(() => toast.classList.add('show'), 10);
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
            toast.querySelector('.toast-close').addEventListener('click', () => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            });
        }

        document.addEventListener("DOMContentLoaded", updateCartCount);
    </script>
}

<style>
    .product-card {
        border-radius: 0.75rem;
        transition: box-shadow 0.2s, transform 0.2s;
        overflow: hidden;
        background: #fff;
        border: none;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .product-card:hover {
            box-shadow: 0 8px 32px rgba(0,0,0,0.15);
            transform: translateY(-4px) scale(1.02);
            z-index: 2;
        }

    .product-image {
        height: 180px;
        object-fit: cover;
        background: #f8f9fa;
        width: 100%;
        border-top-left-radius: 0.75rem;
        border-top-right-radius: 0.75rem;
    }

    .product-title {
        font-size: 1.05rem;
        font-weight: 600;
        margin-bottom: 0.4rem;
        color: #222;
        min-height: 2.2em;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .product-price {
        font-size: 1.05rem;
        color: #e74c3c;
        font-weight: bold;
    }

    .category-badge {
        font-size: 0.85rem;
        font-weight: 500;
        border-radius: 0.5rem;
        padding: 0.25em 0.75em;
    }

    .product-link:hover .product-title {
        color: #0d6efd;
        text-decoration: underline;
    }

    .btn-buy-now {
        white-space: nowrap;
    }
    media (max-width: 576px) {
        .product-title

    {
        font-size: 0.95rem;
    }

    .product-image {
        height: 110px;
    }

    }
</style>