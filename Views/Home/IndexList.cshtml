@model IEnumerable<NguyenNhan_2179_tuan3.Models.Product>

<link rel="stylesheet" href="~/css/product.css" asp-append-version="true" />

<section class="product-listing py-5">
    <div class="container">

        <!-- FORM BỘ LỌC -->
        <form method="get" class="row mb-4 g-3 align-items-end">
            <div class="col-md-3">
                <label class="form-label">Danh mục</label>
                <select name="categoryId" class="form-select">
                    <option value="">Tất cả</option>
                    @foreach (var cat in ViewBag.Categories)
                    {
                        bool selected = (ViewBag.SelectedCategoryId != null && (int)ViewBag.SelectedCategoryId == cat.Id);
                        if (selected)
                        {
                            @:
                            <option value="@cat.Id" selected>@cat.Name</option>
                        }
                        else
                        {
                            @:
                            <option value="@cat.Id">@cat.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Giá từ</label>
                <input type="number" name="minPrice" class="form-control" value="@(ViewBag.MinPrice ?? "")" placeholder="VNĐ" min="0" />
            </div>
            <div class="col-md-2">
                <label class="form-label">Đến</label>
                <input type="number" name="maxPrice" class="form-control" value="@(ViewBag.MaxPrice ?? "")" placeholder="VNĐ" min="0" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Tìm kiếm</label>
                <input type="text" name="searchQuery" class="form-control" value="@(ViewBag.SearchQuery ?? "")" placeholder="Tên sản phẩm..." />
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">Lọc</button>
            </div>
        </form>

        <!-- DANH SÁCH SẢN PHẨM -->
        @if (Model.Any())
        {
            <div class="row g-4">
                @foreach (var item in Model)
                {
                    <div class="col-12 col-sm-6 col-lg-4">

                        <div class="product-card card h-100 border-0 shadow-sm rounded-4 overflow-hidden">
                            <div class="product-media position-relative">
                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                {
                                    <img src="@item.ImageUrl" alt="@item.Name" class="product-image card-img-top" loading="lazy" />
                                }
                                else
                                {
                                    <div class="d-flex justify-content-center align-items-center bg-light" style="height: 220px;">
                                        <i class="bi bi-image fs-1 text-muted"></i>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(item.Category?.Name))
                                {
                                    <span class="category-badge badge bg-warning position-absolute top-0 start-0 m-2">@item.Category.Name</span>
                                }

                                <div class="product-actions position-absolute top-0 end-0 m-2 d-flex flex-column gap-2">
                                    <button onclick="addToCart(@item.Id, 1)" class="btn btn-outline-success btn-sm rounded-circle" title="Thêm vào giỏ">
                                        <i class="bi bi-cart-plus"></i>
                                    </button>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm rounded-circle" title="Xem chi tiết">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                </div>
                            </div>

                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title text-truncate">@item.Name</h5>
                                <p class="card-text small text-muted">@Html.Raw(item.Description)</p>
                                <div class="mt-auto d-flex justify-content-between align-items-center">
                                    <span class="text-success fw-bold">@item.Price.ToString("N0") <span class="text-muted">VND</span></span>
                                    <button onclick="addToCart(@item.Id, 1)" class="btn btn-dark btn-sm">Mua ngay</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state text-center py-5">
                <i class="bi bi-box-seam fs-1 text-muted"></i>
                <h3 class="mt-3">Chưa có sản phẩm nào</h3>
                <p class="text-muted">Hãy thêm sản phẩm đầu tiên của bạn!</p>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        const isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();

        function addToCart(productId, quantity = 1) {
            if (!isAuthenticated) {
                window.location.href = "/Identity/Account/Login?returnUrl=" + encodeURIComponent(window.location.pathname);
                return;
            }

            fetch('/ShoppingCart/AddToCart', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `productId=${productId}&quantity=${quantity}`
            })
            .then(async (response) => {
                if (response.redirected) {
                    window.location.href = response.url;
                    return;
                }
                const data = await response.json();
                const toastMsg = data.success ?
                    `✅ ${data.message || 'Đã thêm vào giỏ hàng'}` :
                    `❌ ${data.message || 'Lỗi khi thêm vào giỏ hàng'}`;
                showToast(toastMsg, data.success ? 'success' : 'error');
                updateCartCount();
            })
            .catch(() => showToast("❌ Lỗi kết nối tới server", 'error'));
        }

        function updateCartCount() {
            fetch('/ShoppingCart/GetCartCount')
                .then(res => res.json())
                .then(data => {
                    const count = data.count || 0;
                    const badge = document.getElementById("cartCount");
                    if (badge) {
                        badge.textContent = count;
                        badge.style.display = count > 0 ? 'inline-block' : 'none';
                        badge.classList.remove('cart-animate');
                        void badge.offsetWidth;
                        if (count > 0) badge.classList.add('cart-animate');
                    }
                });
        }

        function showToast(message, type = 'success') {
            const toast = document.createElement("div");
            toast.className = `toast-notification ${type}`;
            toast.innerHTML = `
                <div class="toast-content">
                    <div class="toast-message">${message}</div>
                    <button class="toast-close">&times;</button>
                </div>`;
            document.body.appendChild(toast);
            setTimeout(() => toast.classList.add('show'), 10);
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
            toast.querySelector('.toast-close').addEventListener('click', () => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            });
        }

        document.addEventListener("DOMContentLoaded", updateCartCount);
    </script>
}